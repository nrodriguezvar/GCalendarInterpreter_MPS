package GCalendarInterpreter.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Color_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Descripcion_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Evento_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new FechaFin_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new FechaInicio_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ListCampos_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Titulo_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Ubicacion_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed69L), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bee4aL), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed40L), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bee2cL), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed56L), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed52L), MetaIdFactory.conceptId(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed62L)).seal();
}
