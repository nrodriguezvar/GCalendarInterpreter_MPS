package GCalendarInterpreter.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_DeleteSmart;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SEmptyContainmentSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/*package*/ class ListCampos_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public ListCampos_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_0();
  }

  private EditorCell createCollection_0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_u9ftr8_a");
    editorCell.setBig(true);
    setCellContext(editorCell);
    editorCell.addEditorCell(createRefNode_0());
    editorCell.addEditorCell(createRefNode_1());
    editorCell.addEditorCell(createRefNode_2());
    editorCell.addEditorCell(createRefNode_3());
    editorCell.addEditorCell(createRefNode_4());
    editorCell.addEditorCell(createRefNode_5());
    return editorCell;
  }
  private EditorCell createRefNode_0() {
    SingleRoleCellProvider provider = new tituloSingleRoleHandler_u9ftr8_a0(myNode, LINKS.titulo$3qPJ, getEditorContext());
    return provider.createCell();
  }
  private static class tituloSingleRoleHandler_u9ftr8_a0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public tituloSingleRoleHandler_u9ftr8_a0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.titulo$3qPJ, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.titulo$3qPJ, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.titulo$3qPJ);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.titulo$3qPJ));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_titulo");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no titulo>";
    }
  }
  private EditorCell createRefNode_1() {
    SingleRoleCellProvider provider = new fechaInicioSingleRoleHandler_u9ftr8_b0(myNode, LINKS.fechaInicio$NIi7, getEditorContext());
    return provider.createCell();
  }
  private static class fechaInicioSingleRoleHandler_u9ftr8_b0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public fechaInicioSingleRoleHandler_u9ftr8_b0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.fechaInicio$NIi7, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.fechaInicio$NIi7, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.fechaInicio$NIi7);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.fechaInicio$NIi7));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_fechaInicio");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no fechaInicio>";
    }
  }
  private EditorCell createRefNode_2() {
    SingleRoleCellProvider provider = new fechaFinSingleRoleHandler_u9ftr8_c0(myNode, LINKS.fechaFin$NIZa, getEditorContext());
    return provider.createCell();
  }
  private static class fechaFinSingleRoleHandler_u9ftr8_c0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public fechaFinSingleRoleHandler_u9ftr8_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.fechaFin$NIZa, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.fechaFin$NIZa, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.fechaFin$NIZa);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.fechaFin$NIZa));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_fechaFin");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no fechaFin>";
    }
  }
  private EditorCell createRefNode_3() {
    SingleRoleCellProvider provider = new ubicacionSingleRoleHandler_u9ftr8_d0(myNode, LINKS.ubicacion$NO9w, getEditorContext());
    return provider.createCell();
  }
  private static class ubicacionSingleRoleHandler_u9ftr8_d0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public ubicacionSingleRoleHandler_u9ftr8_d0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.ubicacion$NO9w, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.ubicacion$NO9w, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.ubicacion$NO9w);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.ubicacion$NO9w));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_ubicacion");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no ubicacion>";
    }
  }
  private EditorCell createRefNode_4() {
    SingleRoleCellProvider provider = new descripcionSingleRoleHandler_u9ftr8_e0(myNode, LINKS.descripcion$NOBy, getEditorContext());
    return provider.createCell();
  }
  private static class descripcionSingleRoleHandler_u9ftr8_e0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public descripcionSingleRoleHandler_u9ftr8_e0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.descripcion$NOBy, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.descripcion$NOBy, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.descripcion$NOBy);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.descripcion$NOBy));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_descripcion");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no descripcion>";
    }
  }
  private EditorCell createRefNode_5() {
    SingleRoleCellProvider provider = new colorSingleRoleHandler_u9ftr8_f0(myNode, LINKS.color$NOQz, getEditorContext());
    return provider.createCell();
  }
  private static class colorSingleRoleHandler_u9ftr8_f0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public colorSingleRoleHandler_u9ftr8_f0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.color$NOQz, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.color$NOQz, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.color$NOQz);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.color$NOQz));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_color");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no color>";
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink titulo$3qPJ = MetaAdapterFactory.getContainmentLink(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L, 0x5ee948073c4ec130L, "titulo");
    /*package*/ static final SContainmentLink fechaInicio$NIi7 = MetaAdapterFactory.getContainmentLink(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L, 0x5ee948073c4f48aeL, "fechaInicio");
    /*package*/ static final SContainmentLink fechaFin$NIZa = MetaAdapterFactory.getContainmentLink(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L, 0x5ee948073c4f48b1L, "fechaFin");
    /*package*/ static final SContainmentLink ubicacion$NO9w = MetaAdapterFactory.getContainmentLink(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L, 0x5ee948073c4f48b2L, "ubicacion");
    /*package*/ static final SContainmentLink descripcion$NOBy = MetaAdapterFactory.getContainmentLink(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L, 0x5ee948073c4f48b4L, "descripcion");
    /*package*/ static final SContainmentLink color$NOQz = MetaAdapterFactory.getContainmentLink(0x4a6101dd798a4af7L, 0x9cc1cbdd6558b662L, 0x5ee948073c4bed45L, 0x5ee948073c4f48b5L, "color");
  }
}
